\documentclass[11pt,reqno,final]{amsart}
\usepackage{tikz}
\input{defs}
\usepackage[round,elide]{natbib}
\input{header}


\title{Structured Genealogy Processes}
\author[Lin]{Qianying Lin}
\author[King]{Aaron~A.~King}
\author[Ionides]{Edward~L.~Ionides}

\date{\today}

\hypersetup{pdftitle={Structured Genealogy Processes}}
\hypersetup{pdfauthor={Q.-Y. Lin, A.A. King, E.L. Ionides}}
\hypersetup{urlcolor=blue,citecolor=blue,linkcolor=blue,filecolor=blue}


<<prefix,include=FALSE,cache=FALSE,purl=FALSE>>=
library(knitr)
prefix <- "strgp"
read_chunk("setup.R")
@
<<setup,include=FALSE,cache=FALSE,purl=FALSE>>=
@
<<packages,include=FALSE,cache=FALSE>>=
library(tidyverse)
library(ggtree)
library(pomp)
library(phylopomp)
library(cowplot)
stopifnot(getRversion() >= "4.0")
stopifnot(packageVersion("pomp")>="3.2")
stopifnot(packageVersion("phylopomp")>="0.0.14")
theme_set(theme_bw(base_family="serif"))
set.seed(1159254136)
@

\begin{document}
\maketitle

\begin{abstract}
  This is a followup paper on Markov Genealogy Process. We construct a continuous time Markov Process, called Structure Genealogy Process, to include structures in the focal population with a moderate adjustments in the setting of individuals, genealogies, and genealogy processes. We derive the exact expression of likelihood of a structured genealogy and develop simulation-based algorithms to conduct statistical inferences. Numerical simulation and real-world examples are included.
\end{abstract}

\section{Introduction}

\section{Mathematical settings}
\label{sec:settings}
\paragraph{Markov genealogy process}
A population process $\sg{X}_t\in\Xspace$ as a non-explosive Markov jump process is defined, where $t\in\Time$ indicates the time and the population is divided into $J\in\N$ classes, with initial-state distribution $p_0(x)$. We then define the jump rate functions $\jumprate_u(t,x)\in\rate$, where $u, x\in\Xspace$ are the jump event and states, respectively. Thus, the population process $\sg{X}_t$ is a stochastic process by defining a sequence of jumps, $\omega=\left(t_k, u_k, n_k\right)_{k=1}^K$, where $K\in\N\cup\{\infty\}$ is the total number of jumps and for the $k$-th jump, $t_k\in\Time$ is the time, $u_k\in\Uspace$ is the event type, and $n_{k}\in\N$ is the label of the individual who conducts $u_k$. The full construction can be referred to \citet{King2021}. We define the following functions on $\omega\in\Omega$:

\begin{equation}
  T_k(\omega)\coloneqq t_k,\qquad U_k(\omega)\coloneqq u_k,\qquad N_k(\omega)\coloneqq n_k,\qquad K(\omega)\coloneqq K
\end{equation}

and 

\begin{equation}
  T(\omega)\coloneqq\left(T_k(\omega)\right)^{K(\omega)}_{k=0},\qquad U(\omega)\coloneqq\left(U_k(\omega)\right)^{K(\omega)}_{k=0},\qquad N(\omega,j)\coloneqq\left(N_k(\omega)\right)^{K(\omega)}_{k=0}.
\end{equation}

% \QYL{May not be necessary to repeat the GP paper.}
% 
% Obviously, there's a unique mapping from $\omega$ to the population process up to time $t\in\Time$. For $\omega\in\Omega$, we then can define the $t$-\emph{restriction} $\omega\vert_t$ and the sample path $\sg{X}_t(\omega)$ of $\omega$:
% 
% \begin{equation}
%   \omega\vert_t\coloneqq\max\{\omega'\in\Omega\,\vert\,\omega'\preceq\omega\text{ and }T_K(\omega')\le t\}
%   \quad\text{and}\quad
%   \sg{X}_t(\omega)=\sum_{k=0}^{K(\omega)}U_k(\omega)\indicator{\left[T_k(\omega),\infty\right)}(t),
% \end{equation}
% 
% where $\omega'\preceq\omega$ implies that $\omega$ is an extension of $\omega'$ and $\indicator{}$ is an indicator function.

\paragraph{Births}
Within a structured infective population, the parent and the child, at a given birth event, can be in different classes. That is, an individual in class $i$ can give birth to a newborn individual in Class $j$, where $i,j=1,\dots,J$. We then define the birth function $B_{ij}:\Uspace\to\N$ for any $i,j=1,\dots,J$. The set of birth events where an individual in Class $i$ gives birth to $n$ individuals in Class $j$ is $\Bset_{ij}\coloneqq\,B_{ij}^{-1}(\{1\})$. Trivially, the set of birth events in Class $j$ is $\Bset_j\coloneqq\bigcup_{i}\Bset_{ij}$.


\paragraph{Transitions}
Infective classes are interchangeable and we define the transition function from Class $i$ to $j$ for any $i\neq j$ and $i,j=1,\dots,J$ as $M_{ij}:\Uspace\to\N$ to represent the number of infectives transiting to Class $j$ from Class $i$. Thus the set or transition is $\Mset_{ij}\coloneqq\,M^{-1}_{ij}(\{1\})$ since we assume single transition at a single transition event. Similarly, we disallow coninciding transition events and other events. 

\paragraph{Samples}
We assume samples are taken serially and no births or deaths are coincided. We then define the sampling function on the probability space of the population process $\sg{X}_t$: $G:\Uspace\to\N_0$ is the number of samples taken at event $u$, then the set of sampling events is $\Sset\coloneqq\,G^{-1}(\{1\})$. Of course, the non-coincidence assumption can be easily relaxed while it's not the focus in this paper.


\paragraph{Deaths and population size}
The population, the set of infected individuals in the context of epidemiology, is structured, categorized into interchangeable classes. We can then define population size function and death functions in Class $j$, respectively, as $I_{j}, D_{j}:\Xspace\to\N$ for any $j=1,\cdots,J$. 
\begin{equation}
  \jumprate_u(t,x) > 0 \Longrightarrow I_j(x+u)-I_j(x)=\sum_{i}\,B_{ij}(u)+\sum_{i}M_{ij}(u)-D_j(u)-\sum_{i}M_{ji}(u),
\end{equation}

for all $x, u\in\Xspace$. We disallow simultaneous death at a single death event at this stage and define the set of death events in Class $j$ as $\Dset_j\coloneqq\,D^{-1}(\{1\})$. We also insist, birth and death events don't coincide for any classes, $i,j$, that is,  $\Bset_{j}\cap\Dset_{i}=\emptyset$. Eventually, we can have the function for total population size by letting $I(x)\coloneqq\sum_{j=1}^J\,I_j(x)$ and it's trivial that 

\begin{equation}
  \jumprate_u(t,x) > 0 \Longrightarrow I(x+u)-I(x)=\sum_{i,j}B_{i,j}(u)-\sum_{j}D_j(u),
\end{equation}



\section{Examples}

Some commonly used compartmental models in epidemiology are in fact structured, either explicitly or implicitly. Here, we demonstrate below how these representatives fit within the population processes we described previously.

\begin{figure}
\begin{minipage}{.5\textwidth}
    \begin{tikzpicture}[scale=1.5]
      \usetikzlibrary{arrows}
      \tikzstyle{coordinate}=[inner sep=0pt,outer sep=0pt]
      \tikzstyle{det}=[color=black, thick, >=stealth]
      \tikzstyle{stoch}=[color=black, dashed, thick, >=stealth]
      \node (S) at (-2,0) {$S$};
      \node (E) at (-1,0) {$E$};
      \node (I) at (0,0) {$I$};
      \node (R) at (1,0) {$R$};
      \draw [det,->] (S) -- (E);
      \draw [det,->] (E) -- (I);
      \draw [det,->] (I) -- (R);
      \draw [det,->] (I) -- (0,.5) -- (-1.5,.5) -- (-1.5,0);
    \end{tikzpicture}
\end{minipage}%
\begin{minipage}{.5\textwidth}
    \begin{tikzpicture}[scale=1.5]
      \usetikzlibrary{arrows}
      \tikzstyle{coordinate}=[inner sep=0pt,outer sep=0pt]
      \tikzstyle{det}=[color=black, thick, >=stealth]
      \tikzstyle{stoch}=[color=black, dashed, thick, >=stealth]
      \node (S) at (-2,0) {$S$};
      \node (I1) at (-.5,.7) {$I_1$};
      \node (I2) at (-.5,-.7) {$I_2$};
      \node (R) at (1,0) {$R$};
      \draw [det,->] (S) -- (I1);
      \draw [det,->] (S) -- (I2);
      \draw [det,->] (I1) -- (R);
      \draw [det,->] (I2) -- (R);
      \draw [det,->] (-.4,.5) -- (-.4,-.5);
      \draw [det,->] (-.6,-.5) -- (-.6,.5);
    \end{tikzpicture}
\end{minipage}
\caption{
  \label{fig:diagram}
}
\end{figure}

\paragraph{SEIR model}
The SEIR model is a simple extension of the most basic SIR model, by adding the latent infected compartment ``E'' into the system, where susceptible individual first become ``exposed'' when being infected, then turn into being infectious and eventually recover or get removed from the system. The infected population, which we are mostly interested in, is divided into two classes:
\begin{inparaenum}
  \item ``E'' represents those that are not able to spread the disease though infected and 
  \item ``I'' are those that are infectious. 
\end{inparaenum}
To fit within the aforementioned population process, we take $d=4$ so that the state vector is $\sg{X}=\left(s,e,i,g\right)$, where $s,e,i,g$ are the number of susceptibles, exposeds, infectives, and the cumulative number of genomic samples collected, respectively. We then summarize four types of jumps, with rate functions:

\begin{equation*}
  \jumprate_u =
  \begin{cases}
     b(t)\,s\,i, & u=\left(-1,1,0,0\right),\,s>0,\,i>0 \\
    \sigma\,e, & u=\left(0,-1,1,0\right),\,e>0,\\
    \gamma\,i, & u=\left(0,0,-1,0\right),\,i>0\\
    \psi(t,s,e,i,g), & u=\left(0,0,0,1\right),\, e+i>0\\
    0, & \text{otherwise.}
  \end{cases}
\end{equation*}

The above shows the rates of being infected, progression from exposed to infectious, recovery, and sampling, respectively. As in \citet{King2021}, the transmission $b(t)$ is time-dependent, and the sampling rate $\psi$ is any function, as long as the constraints in Section 2 are satisfied. Therefore, $I_1(\sg{X})=e$, $I_2(\sg{X})=i$, $I(\sg{X})=e+i$, $\Bset_{21}=\{\left(-1,1,0,0\right)\}$, $\Mset_{12}=\{\left(0,-1,1,0\right)\}$, $\Dset_2=\{\left(0,0,-1,0\right)\}$, $\Sset=\{\left(0,0,0,1\right)\}$, and $\Bset_{11}=\Bset_{12}=\Bset_{22}=\Mset_{21}=\Dset_1=\emptyset$.

\paragraph{SI$^2$R model}

We can customize the state and event vector to fit a complex system. In SI$^2$R model, we have two different while interchangeable classes of infectious individuals, the \emph{per capita} transmissibility therefore in the first class is $b_1(t)$ whilst in the second class is $b_2(t)$. Transition rates between Class $i$ and $j$ are also defined: Class $i$ infection turns into Class $j$ at rate $r_{ij}$ for $i,j=1,2$ and $i\neq j$. Furthermore, we also suppose that, once being infected, a susceptible individual becomes Class 1 infectious with probability $\rho$ while Class 2 infectious with probability $1-\rho$. To specify each event and the number of individuals involved, we define a relatively complex state vector by setting $d=10$ and $\sg{X}=\left(s,i_1,i_2,b_{11},b_{12},b_{21},b_{22},m_{12},m_{21},g\right)$, for $s$, $i_1$, and $i_2$ being the population size of the susceptible, the infectives in Class 1, and those in Class2, respectively, and $b_{11}$, $b_{12}$, $b_{21}$, $b_{22}$, $m_{12}$, and $m_{21}$ being the cumulative number of events of parents in Class 1 giving to children in Class 1 and 2, parents in Class 2 giving birth to children in Class 1 and 2, individuals transiting from Class 1 to Class 2, and vice versa, and sampling, respectively. In this case, we can summarize the event rates as:

\begin{equation*}
  \jumprate_u =
  \begin{cases}
                                          %s,i1,i2,b11,b12,b21,b22,m12,m21,g
     b_1(t)\,s\,i_1\,\rho,        & u=\left(-1,1,0,1,0,0,0,0,0,0\right), s>0, i_1>0 \\
     b_1(t)\,s\,i_1\,(1-\rho),    & u=\left(-1,0,1,0,1,0,0,0,0,0\right), s>0, i_1>0 \\
     b_2(t)\,s\,i_2\,\rho,        & u=\left(-1,1,0,0,0,1,0,0,0,0\right), s>0, i_2>0 \\
     b_2(t)\,s\,i_2\,(1-\rho),    & u=\left(-1,0,1,0,0,0,1,0,0,0\right), s>0, i_2>0 \\
     r_{12}\,i_1,                 & u=\left(0,-1,1,0,0,0,0,1,0,0\right), i_1>0 \\
     r_{21}\,i_2,                 & u=\left(0,1,-1,0,0,0,0,0,1,0\right), i_2>0 \\
     \gamma\,i_1,                 & u=\left(0,-1,0,0,0,0,0,0,0,0\right), i_1>0 \\
     \gamma\,i_2,                 & u=\left(0,0,-1,0,0,0,0,0,0,0\right), i_2>0 \\
     \psi(t,s,i_1,i_2,g),         & u=\left(0,0, 0,0,0,0,0,0,0,1\right), i_1+i_2>0\\
    0, & \text{otherwise.}
  \end{cases}
\end{equation*}

The nine non-zero rates above represent those of infection into Class 1 infected by individuals in Class 1, infection into Class 2 infected by individuals in Class 1, infection in Class 1 infected by individuals in Class 2, infection into Class 2 infected by individuals in Class 1, transition from Class 1 to Class 2, transition from Class 2 to Class 1, recovery from Class 1, recovery from Class 2, and sampling, respectively. We then summarize the population functions and sets as follows:

\begin{align*}
\begin{array}{lll}
  I_1(\sg{X})=i_1,                                  & I_2(\sg{X})=i_2,                              & I(\sg{X})=i_1+i_2, \\
  \Bset_{11}=\{\left(-1,1,0,1,0,0,0,0,0,0\right)\}, & \Bset_{12}=\{\left(-1,0,1,0,1,0,0,0,0,0\right)\}, & \\
  \Bset_{21}=\{\left(-1,1,0,0,0,1,0,0,0,0\right)\}, & \Bset_{22}=\{\left(-1,0,1,0,0,0,1,0,0,0\right)\}, & \\
  \Mset_{21}=\{\left(0,-1,1,0,0,0,0,1,0,0\right)\}, & \Mset_{12}=\{\left(0,1,-1,0,0,0,0,0,1,0\right)\}, & \\
  \Dset_1=\{\left(0,-1,0,0,0,0,0,0,0,0\right)\},    & \Dset_2=\{\left(0,0,-1,0,0,0,0,0,0,0\right)\},    & \\
  \Sset=\{\left(0,0, 0,0,0,0,0,0,0,1\right)\}. & &
\end{array}
\end{align*}

\paragraph{Migration}
One special case of the SI$^2$R model is that with one-time migration or introduction. In other words, an infectious individual from another population join our interested population at a certain point of time $\tau$ and then stay and spread the disease. In this case, if this specific individual is defined as Class 1 while other infectious individuals as Class 2, the transition rate $r_{12}$ is a Dirac delta function $\delta(t)$, where $\delta(t)=\infty$ for $t=\tau$ and $\delta(t)=0$ for $t\neq\tau$, and $r_{21}=0$ all the time.

\paragraph{Superspreading}
The definition of superspreading is ambiguous in epidemiology. Some researchers view it as a certain individual who has extremely strong transmissibility with high reproduction rate and call this individual \emph{superspreader}; others avoid to invidualize this phenomenon and consider it as an event where a cluster of infections appears in a single event within a small amount of time and define it as a \emph{superspreading event}. The first definition can be represented by the SI$^2$R model with two classes of infectious individuals: one with extremely strong transmissibility and the other with weak transmissibility. That is, $b_1(t)\ggg b_2(t)$ if Class 1 is the set of highly infective individuals and Class 2 is the set of ordinary infective. In terms of the second definition, the involvement of polytomies and multifurcating trees adds an extra layer of complexity in the population model, along with the issues of measurement error and model robustness, such that we would like to postpone the development of a new framework to a future study.

\section{Structure genealogy processes}

First, we define a global set $\Names$, which is a collection of infinite unique names. For any Class $j$ of infective population, we define an inventory $\sg{I}_t^j(\omega)=\mathrm{inven}\left(\omega\vert_t,j\right)$, a list to document all the extant infected individuals in Class $j$ at time $t$, by their names, where $\omega\vert_t$ is the sequence of jumps up to time $t$. On top of the global set $\Names$ and the $\mathrm{inven}$ procedure, we can then define six operators: 
\begin{enumerate}[(1)]
  \item $\mathrm{select}(\Names)$ returns a randomly selected name, call it $n$, from the set $\Names$, and update the global set $\Names=\Names\setminus\{n\}$;
  \item $\mathrm{initialize}(I)\coloneqq\bigcup_{i=1}^I\{\mathrm{select}(\Names)\}$;
  \item $\mathrm{add}(\sg{I})=\sg{I}\cup\{\mathrm{select}(\Names)\}$;
  \item $\mathrm{drop}(\sg{I},n)=\sg{I}\setminus\{n\}$, while update the global set $\Names=\Names\cup\{n\}$;
  \item $\mathrm{movein}(\sg{I},m)=\sg{I}\cup\{m\}$; and
  \item $\mathrm{moveout}(\sg{I},m)=\sg{I}\setminus\{m\}$.
\end{enumerate}


Now the deterministic and recursive procedure $\mathrm{inven}$ is described as follows, for $\omega$ is a finite jump sequence:

\begin{equation}
  \mathrm{inven}(\omega,j)\coloneqq
  \begin{cases}
    \mathrm{initialize}(I_j(\sg{X}_0(\omega)), & \text{if }K(\omega)=0; \\
    \mathrm{add}(\mathrm{inven}(\predec{\omega})), & \text{if }K(\omega)>0\text{ and }U_K(\omega)\in\Bset_j;\\
    \mathrm{drop}(\mathrm{inven}(\predec{\omega}),N_{K(\omega)}(\omega)), & \text{if }K(\omega)>0\text{ and }U_K(\omega)\in\Dset_j; \\
    \mathrm{movein}(\mathrm{inven}(\predec{\omega}),N_{K(\omega)}(\omega)), & \text{if }K(\omega)>0\text{ and }U_K(\omega)\in\bigcup_i\Mset_{ij}; \\
    \mathrm{moveout}(\mathrm{inven}(\predec{\omega}),N_{K(\omega)}(\omega)), & \text{if }K(\omega)>0\text{ and }U_K(\omega)\in\bigcup_i\Mset_{ji}; \\
    \mathrm{inven}(\predec{\omega}), & \text{otherwise}.
  \end{cases}
\end{equation}

Eventually, we can define $\mathrm{inven}(\omega)\coloneqq\{\mathrm{inven}(\omega,j)\}_{j=1}^J$ as a list of inventories.

\paragraph{Structured genealogies}
Types of nodes are defined in a structured genealogy: \emph{Leaves} are the extant members at current time and \emph{Internal Nodes} represent ancestors to a certain subset of extant members, which we further define \emph{Sampling Nodes} and \emph{Transition Nodes}, whose differences will be clear in a moment.

For the sake of distinction and visualization, we define a set of \emph{colored ball}s, $(f,n)\in\Colors\times\N$, where $n$ is the label and $f$ is the color of the ball, and $\Colors\coloneqq\{\green,\black,\blue,\red,\purple\}$. Therefore, we can define a genealogy \emph{node} as a quadruple $(n,t,w,z)$, where $n\in\N$ is the node's \emph{name}, $t\in\Time$ is its time, $w$ is the node's \emph{pocket} (\ie unordered pair of colored balls), and $z\in\N$ is the node's \emph{class}. For a node $\Node{p}$, we will use $n(\Node{p})$, $t(\Node{p})$, $w(\Node{p})$, and $z(\Node{p})$ to denote the name, time, pocket, and class of $\Node{p}$, respectively. We then assign black, green, blue, and purple balls to serve as pointers to the extant population at time $t$, to the internal nodes, to the samples, and to the transitions between classes, respectively.

Eventually, the current time $t$ and the sequence of nodes, $\Gen=\left(t,\left(\Node{p}_k\right)_{k=0}^{K-1}\right)$, explicitly define a structured genealogy $\Gen$, where $t\in\Time$, $K\in\N$, and node $\Node{p}_k$ are subjected to conditions described in \citet{King2021}. We then use $t(\Gen)$, $K(\Gen)$, and $\Node{p}_k(\Gen)$ to represent the time, the length (\ie the number of nodes), and the $k$-th node of the genealogy $\Gen$, respectively.

\paragraph{Effect of births, death, sampling and transistions}

Births, deaths, samples, and transitions change the topology of a structured genealogy. A death at time $t$ indicates the removal of a leaf in the genealogy and the dismiss of a node. The detailed definition can be found in \citet{King2021} and here we continue to use the $\mathrm{drop}(\Gen)$ to denote the resulting sequence of nodes.

A birth at time $t$ in a structured genealogy is similar to that in a unstructured one \citep{King2021}, while the new member introduced to the queue of sequence is in the same class as the parent. Let $\Ball{b}$ be the $n$-th black ball, the parent, and there exists a node $\Node{p}\in\Gen$ with $\Ball{b}\in w(\Node{p})=\{\Ball{b},\Ball{b}'\}$ where $\Ball{b}'$ is the other ball held by $\Node{p}$. We then can produce a new node $\Node{p}'=(c,t,\{\Ball{g},\Ball{b}''\},z(\Node{p}))$, where $c=\mathrm{Select}(\Names)$, $\Ball{g}=(\green,c)$, and $\Ball{b}''=(\black,c)$. By swapping balls between $\Node{p}$ and $\Node{p}'$, it ends up that $w(\Node{p})=\{\Ball{g},\Ball{b}'\}$ and $w(\Node{p}')=\{\Ball{b},\Ball{b}''\}$. We denote the resulting sequence of nodes as $\mathrm{add}(\seq{\Gen},n)$.

A sample at time $t$ results in the participation of a new node with a new blue ball. The procedure is similar to the previous sampling in \citet{King2021} and the birth mentioned above: the $n$-th black ball held by $\Node{p}$ (\ie $w(\Node{p})=\{\Ball{b},\Ball{b}'\}$) is selected, then a new node $\Node{p}'=(c,t,\{\Ball{g},\Ball{b}''\},z(\Node{p}))$ is generated, where $c=\mathrm{Select}(\Names)$, $\Ball{g}=(\green,c)$, and $\Ball{b}''=(\blue,q)$, at the end $\Node{p}$ exchanges $\Ball{b}$ for $\Ball{g}$ with $\Node{p}'$. Here, $q$ is the name of the new blue ball, which is the ordinal number of the transition, $q=|\{\Ball{b}\in w(\Gen)\;|\;\Ball{b}\ \text{is blue}\}|$. Note that, same as that in a birth, $z(\Node{p}')=z(\Node{p})$. We also use the same notation $\mathrm{sample}(\Gen,n)$ as the resulting sequence of nodes.

A transition at time $t$ leads to the inclusion of a new node with a new purple ball. Let $\Ball{b}$ denotes the $n$-th black ball selected to indicate an extant in the population transits from his/her/their current class to a new one. Assuming that the unique node $\Node{p}\in\Gen$ baring this selected black ball (\ie $\Ball{b}\in w(\Node{p})=\{\Ball{b},\Ball{b}'\}$) is in Class $i$ (\ie $z(\Node{p})=i$) and it's transiting to Class $j$ where $j\neq i$. Now we initialize a new node by taking $\Node{p}'=(c,t,\{\Ball{g},\Ball{b}''\},j)$, where $c=\mathrm{Select}(\Names)$, $\Ball{g}=(\green,c)$, and $\Ball{b}''=(\purple,q)$. Similar to other events, we swap $\Ball{b}$ for $\Ball{g}$ between nodes $\Node{p}$ and $\Node{p}'$ and insert $\Node{p}'$ at the last position of the node-sequence. Here, $q$ is the name of the new purple ball, which is the ordinal number of the transition, $q=|\{\Ball{b}\in w(\Gen)\;|\;\Ball{b}\ \text{is purple}\}|$. We call this new node $\Node{p}'$ the \emph{Transition Nodes} in the genealogy and denote the resulting sequence of nodes by $\mathrm{transition}(\seq{\Gen},n,j)$.

\paragraph{Event times and structured genealogy process}

Given a genealogy $\Gen$, the set of \emph{genealogical event times}, $\Eset(\Gen)$, is the set of all node times.
Several of its subsets are of interest.
In particular, we define
\begin{equation*}
  \begin{aligned}
    \Eset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen\}, \\
    \Masterset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen, w(\Node{p})\ \text{contains a green ball}\}, \\
    \Cset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen, w(\Node{p})\ \text{contains two green balls}\}, \\
    \Lset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen, w(\Node{p})\ \text{contains no green balls}\}, \\
    \Tset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen, w(\Node{p})\ \text{contains a blue ball}\},\\
    \Zset(\Gen) &\coloneqq \{t(\Node{p})\;|\;\Node{p}\in\Gen, w(\Node{p})\ \text{contains a purple ball}\},\\
    \Qset(\Gen) &\coloneqq \Masterset(\Gen) \cap \Tset(\Gen).
  \end{aligned}
\end{equation*}
With these definitions,
$\Masterset(\Gen)$ comprises the internal node times,
$\Cset(\Gen)$ is the set of branch times,
$\Lset(\Gen)$ contains the leaf times,
$\Tset(\Gen)$ holds the sample times,
$\Zset(\Gen)$ holds the transition times,
and $\Qset(\Gen)$ is the set of \emph{direct-descent times},
i.e., the times of samples that are themselves directly ancestral to other samples.


The structured genealogy evolves over time, so we can proceed to define the \emph{structured genealogy process} $\Gen_t$ now.



\section{Likelihood, filtering equation, and algorithms}


\section{Results}


\section{Discussion}




\bibliographystyle{preprint}
\bibliography{phylopomp}

\end{document}